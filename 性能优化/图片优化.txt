图片优化
计算图片大小
1>对于一张 100 * 100 像素的图片来说，图像上有 10000 个像素点，如果每个像素的值是 RGBA 存储的话，那么也就是说每个像素有 4 个通道，每个通道 1 个字节（8 位 = 1个字节），所以该图片大小大概为 39KB（10000 * 1 * 4 / 1024）。
2>但是在实际项目中，一张图片可能并不需要使用那么多颜色去显示，我们可以通过减少每个像素的调色板来相应缩小图片的大小。
3>了解了如何计算图片大小的知识，那么对于如何优化图片，想必大家已经有 2 个思路了：
a.减少像素点
b.减少每个像素点能够显示的颜色

图片加载优化
1>不用图片。很多时候会使用到很多修饰类图片，其实这类修饰图片完全可以用 CSS 去代替。
2>对于移动端来说，屏幕宽度就那么点，完全没有必要去加载原图浪费带宽。一般图片都用 CDN 加载，可以计算出适配屏幕的宽度，然后去请求相应裁剪好的图片。
3>小图使用 base64 格式
4>将多个图标文件整合到一张图片中（雪碧图）
5>选择正确的图片格式：
a.对于能够显示 WebP 格式的浏览器尽量使用 WebP 格式。
因为 WebP 格式具有更好的图像数据压缩算法，能带来更小的图片体积，而且拥有肉眼识别无差异的图像质量，缺点就是兼容性并不好
b.小图使用 PNG，其实对于大部分图标这类图片，完全可以使用 SVG 代替
c.照片使用 JPEG

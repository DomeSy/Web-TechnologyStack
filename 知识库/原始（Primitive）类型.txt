原始（Primitive）类型
1>在 JS 中，存在着 6 种原始值，分别是：
a.boolean
b.null
c.undefined
d.number
e.string
f.symbol
2>首先原始类型存储的都是值，是没有函数可以调用的，比如 undefined.toString()

a.此时你肯定会有疑问，这不对呀，明明 '1'.toString() 是可以使用的。
b.其实在这种情况下，'1' 已经不是原始类型了，而是被强制转换成了 String 类型也就是对象类型，所以可以调用 toString 函数。
c.除了会在必要的情况下强转类型以外，原始类型还有一些坑。其中 JS 的 number 类型是浮点类型的，在使用中会遇到某些 Bug，比如 0.1 + 0.2 !== 0.3，但是这一块的内容会在进阶部分讲到。
d.string 类型是不可变的，无论你在 string 类型上调用何种方法，都不会对值有改变。
e.另外对于 null 来说，很多人会认为他是个对象类型，其实这是错误的。虽然 typeof null 会输出 object，但是这只是 JS 存在的一个悠久 Bug。
f.在 JS 的最初版本中使用的是 32 位系统，为了性能考虑使用低位存储变量的类型信息，000 开头代表是对象，然而 null 表示为全零，所以将它错误的判断为 object 。		
g.虽然现在的内部类型判断代码已经改变了，但是对于这个 Bug 却是一直流传下来。

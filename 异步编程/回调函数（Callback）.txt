回调函数
1>定义：回调函数就是一个参数，将这个函数作为参数传到另一个函数里面，当那个函数执行完之后，再执行传进去的这个函数。这个过程就叫做回调。
2>回调函数有一个致命的弱点，就是容易写出回调地狱（Callback hell）
3>例如：
ajax(url, () => {
    // 处理逻辑
})
a.假设多个请求存在依赖性，你可能就会写出如下代码：
ajax(url, () => {
    // 处理逻辑
    ajax(url1, () => {
        // 处理逻辑
        ajax(url2, () => {
            // 处理逻辑
        })
    })
})
b.这样的代码看起来不利于阅读和维护，这是可以将上述代码分开来写，如：
function firstAjax() {
  ajax(url1, () => {
    // 处理逻辑
    secondAjax()
  })
}
function secondAjax() {
  ajax(url2, () => {
    // 处理逻辑
  })
}
ajax(url, () => {
  // 处理逻辑
  firstAjax()
})
c.这样虽然便于阅读，但从根本上并没有解决问题。

4>回调地狱的根本问题就是：
a.嵌套函数存在耦合性，一旦有所改动，就会牵一发而动全身
b.嵌套函数一多，就很难处理错误
c.不能使用 try catch 捕获错误
d.不能直接 return。
5>解决回调地狱的办法
a.Promise(ES6）
b.Generator(ES6)
c.async/await(ES7)